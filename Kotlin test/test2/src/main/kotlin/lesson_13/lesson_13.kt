fun main() {
// NullPointerException(NPE)- когда в переменной отображается null - отсутствие объекта (ошибка нулевого указателя)
// nullable type - переменные могут содержать значение null и обозначаются знаком '?' (оператор безопасного вызова),
// после написания типа. Например: String? = null

    val nullAbleString: String? = null  // без ? - будет ошибка
//    val nonNullAbleString: String = "some text"

//    println(nullAbleString?.length)    //при обращении к свойствам или методам переменно с null, всегде нужно использовать '?'
//    println(nonNullAbleString.length)


// val nullAbleLine: String? = readLine()   // указываем '?', т.к. возможен ввод пустой строки (null)

    /*
    Например, если нужно сохранить инфу о кол-ве символов в строке в переменную с типом Int, но,
    переменная принимающая строку может вернуть null - в таком случае, просто так инициализировать переменную Int
    не получится. Нужно использовать "Элвис оператор" - '?:'.
    Он проверяет значение слева от себя, и, если вернется null, то передаст в переменную Int прописанное справа значение.

     */
//    val stringLength: Int = nullAbleString?.length ?: 0
//    println(stringLength)

    /*
Оператор утверждения "это не null" - '!!' (отказ от проверки на null, т.е. его там не может быть, например, при вводе данных)
Если при проверке будет null - программа вернет NPE
     */
    val stringLength: Int = nullAbleString!!.length
}