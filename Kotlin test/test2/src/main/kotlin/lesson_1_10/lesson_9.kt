fun main() {
    // list  - список, могут быть дубликаты. Можно обращаться по индексам
    // Set   - множество. Без дублированных элементов. Порядок может быть любой.
    // Map   - словарь\ассоциативный список. Содержит пары - уникальный ключ и значение.

    // массив - Имеет фиксированный размер. Изменить его размер можно только создав копию с\без новых элементов.
    //          В массиве сравниваются адреса ячеек в памяти, в списках - сами значания.

    val list1 = listOf(1, 2, 3)  // listOf - создание неизменяемого списка. Нельзя замеить элемент по индексу, как в массиве.
    val list2 = mutableListOf(1, 2, 3) // mutableListOf - создание изменяемого списка.

    val mutList = mutableListOf(10, 15, 4, 33, 0, 39)
    println(mutList)

    mutList.add(42)  // с одним параметром - добавил элемент в конец списка
    println(mutList)

    mutList.add(2, 42) // с двумя параметрами - индекс-элемент - добавляет элемент в соответствии с указанным индексом
    println(mutList)

    println(mutList.contains(42))    // проверка наличия элемента в списке (true/false)

    println(mutList.isEmpty())
    println(mutList.isNotEmpty())  // пустой\не пустой список

    println(mutList.indexOf(42))
    println(mutList.lastIndexOf(42)) // узнать индекс элемента

    mutList.sort()             // сортировка списка по возрастанию
    mutList.sortDescending()   // сортировка по убыванию
    mutList.reverse()          // развернуть список

    println(mutList)

    mutList.forEach {     // перебор элементов списка
        println(it)             // it - автоматически задекларированная переменная (можно изменить имя)
    }
//  если используется интервал -> for
//  если коллекция (типа списка) -> .forEach
//  если использовать continue или break -> for

    val mutList2 = mutList.filter {  // .filter - не изменяет список, а просто отфильтровывает и сохраняет указанный элемент
        it == 42  // переменная it равна 42, т.е. в новый список попадет значение(ния) == 42
    }

    mutList2.forEach {
        println(it)
    }

    // .map - обращается ко всем элементам списка, например, можно их все умножить
    val mutList3 = mutList2.map {
        it * 2
    }
    mutList3.forEach { println(it) }
}